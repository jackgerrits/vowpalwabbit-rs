name: build

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Setup MSVC Developer Command Prompt
      if: ${{ startsWith(matrix.os, 'windows') }}
      uses: ilammy/msvc-dev-cmd@v1
    - uses: lukka/get-cmake@latest
    - uses: lukka/run-vcpkg@main
      with:
        vcpkgDirectory: '${{ github.workspace }}/binding/external/vcpkg'
        vcpkgJsonGlob: "${{ github.workspace }}/binding/vcpkg.json"
    - uses: lukka/run-cmake@v10
      with:
        cmakeListsTxtPath: '${{ github.workspace }}/binding/CMakeLists.txt'
        configurePreset: 'vcpkg'
        buildPreset: 'vcpkg'
    - if: ${{ startsWith(matrix.os, 'windows') == false }}
      working-directory: binding
      run: sudo cmake --install build --strip
    - if: ${{ startsWith(matrix.os, 'windows') }}
      working-directory: binding
      run: cmake --install build --strip
    - if: ${{ startsWith(matrix.os, 'windows') }}
      run: |
        echo "C:/Program Files (x86)/vowpalwabbit-rs-bindings/bin/" >> $GITHUB_PATH
    - name: Build Rust
      run: cargo build -vv
      env:
        # Required to make it work in some Linux situations
        LD_LIBRARY_PATH: /lib:/usr/lib:/usr/local/lib
    - name: Run tests
      run: cargo test -vv
      env:
        # Required to make it work in some Linux situations
        LD_LIBRARY_PATH: /lib:/usr/lib:/usr/local/lib
