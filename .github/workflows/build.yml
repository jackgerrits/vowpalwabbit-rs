name: build

on:
  push:
    branches:
      - master
      - 'releases/**'
  pull_request:
    branches:
      - '*'

jobs:
  build:
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          [
            { os: ubuntu-latest, preset: vcpkg },
            { os: macos-latest, preset: vcpkg },
            { os: windows-latest, preset: vcpkg-windows },
          ]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Setup MSVC Developer Command Prompt
        if: ${{ startsWith(matrix.config.os, 'windows') }}
        uses: ilammy/msvc-dev-cmd@v1
      - uses: lukka/get-cmake@latest
      - uses: lukka/run-vcpkg@v10.4
        with:
          vcpkgDirectory: "${{ github.workspace }}/binding/vcpkg"
          vcpkgJsonGlob: "binding/vcpkg.json"
      - uses: lukka/run-cmake@v10
        with:
          cmakeListsTxtPath: "${{ github.workspace }}/binding/CMakeLists.txt"
          configurePreset: "${{ matrix.config.preset }}"
          buildPreset: "${{ matrix.config.preset }}"
      - if: ${{ startsWith(matrix.config.os, 'windows') == false }}
        working-directory: binding
        run: |
          sudo cmake --install build --strip
          rm -rf vcpkg/buildtrees
          rm -rf vcpkg/packages
          rm -rf build/vcpkg_installed
      - if: ${{ startsWith(matrix.config.os, 'windows') }}
        working-directory: binding
        shell: powershell
        run: |
          cmake --install build --strip
          "C:/Program Files (x86)/vowpalwabbit-rs-bindings/bin/" >> $env:GITHUB_PATH
          "VW_RS_BINDING_HOME=C:/Program Files (x86)/vowpalwabbit-rs-bindings" >> $env:GITHUB_ENV
          Remove-Item -LiteralPath "vcpkg\buildtrees" -Force -Recurse
          Remove-Item -LiteralPath "vcpkg\packages" -Force -Recurse
          Remove-Item -LiteralPath "build/vcpkg_installed" -Force -Recurse
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions-rs/cargo@v1
        with:
          command: build
        env:
          # Required to make it work in some Linux situations
          LD_LIBRARY_PATH: /lib:/usr/lib:/usr/local/lib
      - uses: actions-rs/cargo@v1
        with:
          command: test
        env:
          # Required to make it work in some Linux situations
          LD_LIBRARY_PATH: /lib:/usr/lib:/usr/local/lib
      - uses: actions-rs/cargo@v1
        with:
          command: clean
